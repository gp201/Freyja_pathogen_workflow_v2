// nextflow configuration file
// main script name
manifest {
    author = 'Praneeth'
    name = 'FreyjaBarcodePipeline'
    homePage = 'https://github.com/gp201/Freyja_pathogen_workflow'
    defaultBranch = 'v1'
    description = 'This pipeline is used to generate pathogen barcodes for the Freyja project.'
    mainScript = 'main.nf'
    version = '0.1.0'
    nextflowVersion = '>=23.04'
}

// get max number of cpus
def max_cpus = Runtime.runtime.availableProcessors()

// Global default params, used in configs
params {
    // Nextflow configurations
    publish_dir_mode = 'copy'
    force_overwrite = false
    outdir = './output'
    use_json = false
    skip_clade_assignment = false
    skip_alignment = false

    // Pipeline parameters
    align_method = 'minimap2'

    // parameters for modules
    json_file = 'nextstrain.json'
    fasta = '/sequences.fasta'
    metadata = '/metadata.tsv'
    tree = 'None'
    strain_column = 'strain'
    date_column = 'date'
    lineage_column = 'lineage'
    ref_seq = '/reference.fasta'
    threads = max_cpus
    iqtree_nucleotide_model = 'MFP'
    clock_filter = 3.0
    gri_lineage_level = 'GRI Lineage Level 2'
    autolin_cmd = ""
}

timeline {
    enabled = true
    overwrite = params.force_overwrite
    file    = "${params.outdir}/pipeline_info/execution_timeline.html"
}
report {
    enabled = true
    overwrite = params.force_overwrite
    file    = "${params.outdir}/pipeline_info/execution_report.html"
}
trace {
    enabled = true
    overwrite = params.force_overwrite
    file    = "${params.outdir}/pipeline_info/execution_trace.txt"
}
dag {
    enabled = true
    overwrite = params.force_overwrite
    file    = "${params.outdir}/pipeline_info/pipeline_dag.html"
}

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        docker.remove          = true
        docker.fixOwnership    = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
}
